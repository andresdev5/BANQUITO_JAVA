plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ec.edu.monster'
version = '0.0.1-SNAPSHOT'

ext {
    sourcesDir = "${layout.buildDirectory.get()}/generated-sources/jaxb"
    xsdSchema = 'src/main/resources/app.xsd'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated-sources/jaxb'
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    jaxb
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'wsdl4j:wsdl4j'
    implementation 'org.modelmapper:modelmapper:3.2.1'
    implementation 'org.imgscalr:imgscalr-lib:4.2'
    implementation 'net.datafaker:datafaker:2.4.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'net.sf.jasperreports:jasperreports:7.0.1'
    implementation 'net.sf.jasperreports:jasperreports-fonts:7.0.1'
    implementation 'net.sf.jasperreports:jasperreports-chart-themes:7.0.1'
    implementation 'net.sf.jasperreports:jasperreports-pdf:7.0.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    jaxb("org.glassfish.jaxb:jaxb-xjc")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('genJaxb') {
    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)

            xjc(destdir: sourcesDir, schema: xsdSchema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}

compileJava.dependsOn genJaxb

tasks.named('test') {
    useJUnitPlatform()
}
